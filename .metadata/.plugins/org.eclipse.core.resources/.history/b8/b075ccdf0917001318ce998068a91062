import weka.core.Instances;
import weka.core.Attribute;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.trees.J48;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;



public class Classificador {
	Classifier classificador;
	
	
	Classificador(){
		try {
			classificador = (Classifier) weka.core.SerializationHelper.read("/Modelo/classificador.model");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void testa(){
		Instances teste = inicializaInstancias("training.arff");
		
		
		
		try {
			Evaluation eTest = new Evaluation(teste);
			eTest.evaluateModel(classificador, teste);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println(eTest.toSummaryString("\nResultados\n======\n", false));
		
	}
	
	private static Instances inicializaInstancias(String a)
	{
		BufferedReader br;
		Instances instancia;
		try {
			br = new BufferedReader(new FileReader(a));
			instancia = new Instances(br);
			br.close();
			
		} catch (IOException e) {
			//Retorna null caso não encontre arquivos de base, avisa em caso de erro
			System.out.println("Arquivo(s) de base não foram encontrados/Erro de leitura de arquivos");
			e.printStackTrace();
			
			return null;
		}
		return instancia;
		
	}
	
}
