import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;


public class ConversorTrial {
	public static void processaXML(File XMLAtomic, File XMLRelation, File arquivoXMLSaida)
	{
		//Inicializa Parsers DOM
		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		
		
		//Nota: Blocos Try/Catch são obrigatórios
		try {
			DocumentBuilder db = dbf.newDocumentBuilder();
			//Define estrutura Document dos XMLs de entrada
			Document docAtomic = db.parse(XMLAtomic);
			Document docRelation = db.parse(XMLRelation);
			//Define estrutura Document do XML de saida
			Document docSaida = db.newDocument();
			
			//Define elemento raiz 
			Element raizAtomic = docAtomic.getDocumentElement();
			
			Element raizRelation = docRelation.getDocumentElement();
			
			
			//Verifica se há um elemento Domain, se não o cria
			Element raizSaida;
			if(docSaida.getDocumentElement() == null)
			{
				System.out.println("AA");
				Element Domain = docSaida.createElement("DOMAIN");
				docSaida.appendChild(Domain);
				
			}
			//Define a raiz do documento de saida
			raizSaida = docSaida.getDocumentElement();
			
			//Adiciona os contextos preenchidos
			adicionaContext(raizAtomic,raizRelation, raizSaida, docSaida);
			
			//docSaida.normalizeDocument();
			
			salvaXML(docSaida, arquivoXMLSaida);
		} 
		catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
}
